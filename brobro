-- Tekkit-Style Titan Auto-Farm Script with Smooth Hover (Aot:R)
-- Client-side LocalScript

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

-- Configuration
local Options = {
    AutoFarm       = { Value = true },
    NapeExtender   = { Value = true },
    HitboxSize     = { Value = 15 },          -- Enlarged hitbox for top-down touch
    TweenHeights   = { Up = 100, Hover = 15 },
    TweenTimes     = { Up = 0.4, Across = 0.5, Hover = 0.5 }
}

-- References
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Smooth hover using BodyPosition for a springy settle
local function smoothHover(part, targetPos, duration)
    part.Anchored = false
    local bodyPos = Instance.new("BodyPosition")
    bodyPos.Parent = part
    bodyPos.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    bodyPos.P = 3000
    bodyPos.D = 500
    bodyPos.Position = targetPos
    task.wait(duration)
    bodyPos:Destroy()
end

-- Swoop up, across, then smooth hover above nape
local function swoopAndSmoothHover(hrp, nape)
    -- 1) Fly straight up (anchored)
    hrp.Anchored = true
    local upCFrame = CFrame.new(hrp.Position + Vector3.new(0, Options.TweenHeights.Up, 0))
    TweenService:Create(hrp, TweenInfo.new(Options.TweenTimes.Up, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { CFrame = upCFrame }):Play():Completed:Wait()

    -- 2) Fly across while staying high
    local acrossCFrame = CFrame.new(nape.Position + Vector3.new(0, Options.TweenHeights.Up, 0))
    TweenService:Create(hrp, TweenInfo.new(Options.TweenTimes.Across, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), { CFrame = acrossCFrame }):Play():Completed:Wait()

    -- 3) Smooth hover above target
    local hoverPos = nape.Position + Vector3.new(0, Options.TweenHeights.Hover, 0)
    -- Unanchor before applying physics
    hrp.Anchored = false
    smoothHover(hrp, hoverPos, Options.TweenTimes.Hover)
end

-- Main auto-farm loop
local function autoFarm()
    while Options.AutoFarm.Value do
        local titansFolder = Workspace:FindFirstChild("Titans")
        if not titansFolder then
            warn("[AutoFarm] Titans folder not found, retrying...")
            task.wait(1)
            continue
        end

        -- Gather and sort Titans by distance
        local titanList = {}
        for _, titan in ipairs(titansFolder:GetChildren()) do
            local hitboxes = titan:FindFirstChild("Hitboxes")
            local hit = hitboxes and hitboxes:FindFirstChild("Hit")
            local nape = hit and hit:FindFirstChild("Nape")
            if nape then
                table.insert(titanList, { model = titan, nape = nape })
            end
        end
        table.sort(titanList, function(a, b)
            return (a.nape.Position - hrp.Position).Magnitude < (b.nape.Position - hrp.Position).Magnitude
        end)

        -- Process each Titan
        for _, entry in ipairs(titanList) do
            local titan = entry.model
            local nape = entry.nape

            -- Extend Nape vertically
            if Options.NapeExtender.Value then
                nape.Size = Vector3.new(Options.HitboxSize.Value, Options.HitboxSize.Value, Options.HitboxSize.Value)
                nape.Transparency = 0.85
                nape.CanCollide = false
                print("[AutoFarm] Extended Nape for:", titan.Name)
            end

            -- Swoop and smooth hover
            swoopAndSmoothHover(hrp, nape)

            -- Simulate touch attack or replace with remote fire if needed
            firetouchinterest(hrp, nape, 0)
            task.wait(0.1)
            firetouchinterest(hrp, nape, 1)

            task.wait(0.3)
            if not Options.AutoFarm.Value then break end
        end

        task.wait(0.05)
    end
end

-- Start auto-farming
spawn(autoFarm)
