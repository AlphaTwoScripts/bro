-- Tekkit-Style Continuous Hover Titan Auto-Farm (Aot:R)
-- Client-side LocalScript

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

-- Configuration
local Options = {
    AutoFarm       = { Value = true },
    NapeExtender   = { Value = true },
    HitboxSize     = { Value = 15 },          -- Enlarged hitbox for top-down touch
    HoverHeight    = 100,                     -- Constant altitude above nape
    TweenTimes     = { Across = 0.5, Hover = 0.5 }
}

-- References
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Smooth hover using BodyPosition for a springy settle
local function smoothHover(part, targetPos, duration)
    local bodyPos = Instance.new("BodyPosition")
    bodyPos.Parent = part
    bodyPos.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    bodyPos.P = 3000
    bodyPos.D = 500
    bodyPos.Position = targetPos
    task.wait(duration)
    bodyPos:Destroy()
end

-- Horizontal chop+hover tween (Tekkit style)
local function moveAndHover(hrp, targetPos)
    -- Keep anchored to avoid physics fight during horizontal move
    hrp.Anchored = true

    -- Move horizontally (preserve height in targetPos)
    local moveCFrame = CFrame.new(targetPos)
    TweenService:Create(hrp, TweenInfo.new(Options.TweenTimes.Across, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {CFrame = moveCFrame}):Play():Completed:Wait()

    -- Unanchor and apply smooth hover settle
    hrp.Anchored = false
    smoothHover(hrp, targetPos, Options.TweenTimes.Hover)
end

-- Main auto-farm function
local function autoFarm()
    -- Wait for Titans folder
    repeat
        task.wait(1)
    until Workspace:FindFirstChild("Titans")

    -- Initial ascend to global hover altitude above first Titan
    if Options.AutoFarm.Value then
        -- Find a target Titan to hover above
        local firstTitan = Workspace.Titans:FindFirstChildWhichIsA("Model")
        if firstTitan and firstTitan:FindFirstChild("Hitboxes") then
            local nape = firstTitan.Hitboxes:FindFirstChild("Hit") and firstTitan.Hitboxes.Hit:FindFirstChild("Nape")
            if nape then
                local startPos = nape.Position + Vector3.new(0, Options.HoverHeight, 0)
                hrp.CFrame = CFrame.new(startPos)
                task.wait(0.2)
            end
        end
    end

    -- Continuous loop
    while Options.AutoFarm.Value do
        local titansFolder = Workspace:FindFirstChild("Titans")
        if not titansFolder then
            warn("[AutoFarm] Titans folder missing. Retrying...")
            task.wait(1)
            continue
        end

        -- Gather and sort Titans by distance
        local titanList = {}
        for _, titan in ipairs(titansFolder:GetChildren()) do
            local hitboxes = titan:FindFirstChild("Hitboxes")
            local hit = hitboxes and hitboxes:FindFirstChild("Hit")
            local nape = hit and hit:FindFirstChild("Nape")
            if nape then
                table.insert(titanList, { model = titan, nape = nape })
            end
        end
        table.sort(titanList, function(a, b)
            return (a.nape.Position - hrp.Position).Magnitude < (b.nape.Position - hrp.Position).Magnitude
        end)

        -- Iterate and hover over each Titan
        for _, entry in ipairs(titanList) do
            local titan = entry.model
            local nape = entry.nape

            -- Extend Nape for hover touch
            if Options.NapeExtender.Value then
                nape.Size = Vector3.new(Options.HitboxSize.Value, Options.HitboxSize.Value, Options.HitboxSize.Value)
                nape.Transparency = 0.85
                nape.CanCollide = false
                print("[AutoFarm] Nape extended for:", titan.Name)
            end

            -- Calculate hover position
            local hoverPos = nape.Position + Vector3.new(0, Options.HoverHeight, 0)

            -- Move horizontally and hover
            moveAndHover(hrp, hoverPos)

            -- Simulate touch attack
            firetouchinterest(hrp, nape, 0)
            task.wait(0.1)
            firetouchinterest(hrp, nape, 1)

            task.wait(0.3)
            if not Options.AutoFarm.Value then break end
        end

        task.wait(0.05)
    end
end

-- Start farming
spawn(autoFarm)
